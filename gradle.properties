# https://developer.android.com/build/optimize-your-build#experiment-with-the-jvm-parallel-garbage-collector
org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError -XX:+UseParallelGC -Dfile.encoding=UTF-8
org.gradle.caching=true
org.gradle.configureondemand=true
org.gradle.daemon=true
org.gradle.info=true
org.gradle.offline=true
org.gradle.profile=true
org.gradle.parallel=true
org.gradle.parallel.threads=12
org.gradle.workers.max=12
# https://docs.gradle.org/current/userguide/file_system_watching.html
org.gradle.vfs.watch=true
# https://docs.gradle.org/current/userguide/configuration_cache.html
org.gradle.configuration-cache=true
org.gradle.configuration-cache-problems=warn
## =================================================================================================
## java
## =================================================================================================
compileJava.options.incremental=true
compileJava.options.fork=true
## =================================================================================================
## android
## =================================================================================================
# https://developer.android.com/topic/libraries/support-library/androidx-overview
android.useAndroidX=true
## Determines whether to generate a BuildConfig class.
android.defaults.buildfeatures.buildConfig=false
## Determines whether to support Data Binding.
android.defaults.buildFeatures.dataBinding=false
## Determines whether to support View Binding.
android.defaults.buildFeatures.viewBinding=false
## Determines whether to generate binder classes for your AIDL files.
android.defaults.buildfeatures.resvalues=true
## Determines whether to support shader AOT compilation.
android.defaults.buildfeatures.shaders=false
# https://r8.googlesource.com/r8/+/refs/heads/master/compatibility-faq.md#r8-full-mode
android.enableR8.fullMode=false
## since agp 8.0.0 changed default values must be reverted for desired Behaviour
# https://developer.android.com/build/releases/gradle-plugin#default-changes
android.nonFinalResIds=true
android.nonTransitiveRClass=false
## =================================================================================================
## kotlin
## =================================================================================================
kotlin.code.style=official
kotlin.incremental=true
kotlin.caching.enabled=true
kotlin.incremental.js=true
kotlinOptions.allWarningsAsErrors=true
kotlinOptions.verbose=true
kotlinOptions.freeCompilerArgs=["-Xjvm-default=all-compatibility"]

# publishing
GROUP=net.kibotu
POM_ARTIFACT_ID=AndroidResourceExtensions

POM_NAME=AndroidResourceExtensions
POM_DESCRIPTION=Convenience extension methods for android's auto-generated /res folder *R.* class. Basically everything in your res/ and /assets folder can be accessed via an extension function. *Note: everything gets loaded with current activity context, if that is not available it uses application context.*
POM_INCEPTION_YEAR=2024
POM_URL=https://github.com/kibotu/AndroidResourceExtensions

POM_LICENSE_NAME=The Apache Software License, Version 2.0
POM_LICENSE_URL=https://www.apache.org/licenses/LICENSE-2.0.txt
POM_LICENSE_DIST=repo

POM_SCM_URL=https://github.com/kibotu/AndroidResourceExtensions
POM_SCM_CONNECTION=scm:git:git://github.com/kibotu/AndroidResourceExtensions.git
POM_SCM_DEV_CONNECTION=scm:git:ssh://git@github.com/kibotu/AndroidResourceExtensions.git

POM_DEVELOPER_ID=kibotu
POM_DEVELOPER_NAME=Jan Rabe
POM_DEVELOPER_URL=https://github.com/kibotu/
